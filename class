#! /bin/sh

# CPP --------------------------------------------------------------------------
cpp() {
    local class=$1
    local uppercase_name=$(echo $class | tr a-z A-Z)

    cat <<EOF > ${class}.cpp
#include "${class}.hpp"
#include <iostream>
#include "colors.hpp"

// CONSTRUCTORS AND DESTRUCTORS-------------------------------------------------
${class}::${class}(void) {
    std::cout << GREEN "${class} default constructor called" NC << std::endl;
}

${class}::${class}(const ${class} &other) {
    std::cout << GREEN "${class} copy constructor called" NC << std::endl;
    *this = other;
}

${class}::~${class}(void) {
    std::cout << RED "${class} destructor called" NC << std::endl;
}

// OPERATORS--------------------------------------------------------------------
${class} &${class}::operator=(const ${class} &other) {
    if (this != &other){
        // DO THINGS
    }
    return (*this);
}

// METHODS AND MEMBER FUNCTIONS-------------------------------------------------
EOF
}

# HPP --------------------------------------------------------------------------
hpp() {
    local class=$1
    local uppercase_name=$(echo $class | tr a-z A-Z)

    cat <<EOF > ${class}.hpp
#ifndef _${uppercase_name}_HPP
#define _${uppercase_name}_HPP

class ${class} {
  public:
    ${class}(void);
    ${class}(const ${class} &other);
    ~${class}(void);

    ${class} &operator=(const ${class} &other);
};

#endif // _${uppercase_name}_HPP
EOF
}

# COLORS -----------------------------------------------------------------------
colors() {
    cat <<EOF > colors.hpp
#ifndef _COLORS_HPP
#define _COLORS_HPP

#define BLACK "\033[1;30m"
#define RED "\033[1;31m"
#define GREEN "\033[1;32m"
#define YELLOW "\033[1;33m"
#define BLUE "\033[1;34m"
#define MAGENTA "\033[1;35m"
#define CYAN "\033[1;36m"
#define WHITE "\033[1;37m"
#define NC "\033[0m"

#endif // !_COLORS_HPP
EOF
}

################################################################################
main() {
    for class in "$@"; do
        cpp $class
        hpp $class
    done

    colors
}

main "$@"
